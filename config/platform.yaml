services:
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        lazy: true
        arguments:
            - !service { class: PDO, factory: [ '@database_connection', 'getNativeConnection' ] }
            - { lock_mode: 1 }

# Enable this if you're using S3 for assets storage
    # assets_s3:
    #     class: 'Aws\S3\S3Client'
    #     arguments:
    #         -  
    #            region: 'eu-north-1'
    #            version: 'latest'
    #            credentials:
    #                key: '%env(S3_STORAGE_KEY)%'
    #                secret: '%env(S3_STORAGE_SECRET)%'
    
pimcore:
    encryption:
        secret: '%env(PLATFORM_PROJECT_ENTROPY)%'
    gotenberg:
        base_url: 'http://%env(GOTENBERG_IP)%:%env(GOTENBERG_PORT)%'
# Enable this if you're using S3 for assets storage
    # assets:
    #     frontend_prefixes:
    #         # Prefix used for the original asset files
    #         source: 'https://%env(S3_PRIVATE_BUCKET)%.s3.eu-north-1.amazonaws.com/assets'
    #         # Prefix used for all generated image & video thumbnails
    #         thumbnail: 'https://%env(S3_PUBLIC_BUCKET)%.s3.eu-north-1.amazonaws.com/thumbnails'

    # The default saving location for the following configurations is yaml (Symfony Config)
    # This however needs a rebuild of Symfony Container, which is not possible in `production` environment
    # If you require to change one of this settings in prodcution, please uncomment the config accordingly,
    # the settings will then be saved in `settings-store`, which is located in the database
#    config_location:
#        image_thumbnails:
#            write_target:
#                type: 'settings-store'
#        video_thumbnails:
#            write_target:
#                type: 'settings-store'
#        document_types:
#            write_target:
#                type: 'settings-store'
#        predefined_properties:
#            write_target:
#                type: 'settings-store'
#        predefined_asset_metadata:
#            write_target:
#                type: 'settings-store'
#        perspectives:
#            write_target:
#                type: 'settings-store'
#        custom_views:
#            write_target:
#                type: 'settings-store'
#        object_custom_layouts:
#            write_target:
#                type: 'settings-store'
#        system_settings:
#            write_target:
#                type: 'settings-store'
#            read_target:
#                type: 'settings-store'

pimcore_admin:
#    admin_csp_header:
#        additional_urls:
#            connect-src:
#                - '%env(MERCURE_URL)%/.well-known/mercure'
    config_location:
        admin_system_settings:
            write_target:
                type: 'settings-store'
            read_target:
                type: 'settings-store'

# Enable this if you're using Elasticsearch
#pimcore_elasticsearch_client:
#    es_clients:
#        default:
#            hosts: ['%env(PIMCORE_ES_CLIENT_HOST)%']

doctrine:
    dbal:
        connections:
            default:
                host: '%env(DATABASE_HOST)%'
                port: '%env(DATABASE_PORT)%'
                user: '%env(DATABASE_USER)%'
                password: '%env(DATABASE_PASSWORD)%'
                dbname: '%env(DATABASE_DBNAME)%'
                mapping_types:
                    enum: string
                    bit: boolean
                server_version: 'mariadb-10.6.11'

framework:
    cache:
        pools:
            pimcore.cache.pool:
                public: true
                tags: true
                default_lifetime: 31536000  # 1 year
                adapter: pimcore.cache.adapter.redis_tag_aware
                provider: 'redis://%env(REDIS_HOST)%:%env(REDIS_PORT)%'

    session:
        handler_id: Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler

parameters:
    mercure:
        hub:
            jwt_key: '%env(PLATFORM_PROJECT_ENTROPY)%'

    secret: '%env(PLATFORM_PROJECT_ENTROPY)%'
    app_encryption_secret: '%env(PLATFORM_PROJECT_ENTROPY)%'
    pimcore_executable_npm: "/usr/local/bin/npm"
    pimcore_executable_npx: "/usr/local/nodejs/bin/npx"
    .container.dumper.inline_factories: true

# Enable this when using Pimcore Direct Edit bundle
# Don't forget to enable the Mercure app in .platform/applications.yaml and .platform/routes.yaml
# and enable the line in pimcore_admin.admin_csp_header.additional_urls.connect-src a bit further up in this file
#pimcore_direct_edit:
#    mercure_settings:
#        # URL of mercure accessible for client.
#        # client_side_url: <PIMCORE_SCHEMA_HOST>/hub/mercure
#        # URL of mercure accessible for server.
#        server_side_url: '%env(MERCURE_URL)%/.well-known/mercure'

#pimcore_web_to_print:
#    generalTool: gotenberg
#    generalDocumentSaveMode: default
#    gotenbergHostUrl: '%env(GOTENBERG_HOST_URL)%'
#    gotenbergSettings: ''
#    config_location:
#        web_to_print:
#            write_target:
#                type: 'disabled'

pimcore_enterprise_subscription_tools:
    token: '%env(PIMCORE_TOKEN)%'
    production_system: '%env(bool:PIMCORE_IS_PRODUCTION_SYSTEM)%'
    
# Monolog default configuration
monolog:
    channels: ['pimcore', 'pimcore_api', 'session']
    handlers:
        redirect:
            type: stream
            path:  "php://stdout"
            level: debug
            channels: ['redirect']

# pimcore_open_search_client:
#     clients:
#         default:
#             hosts: ['%env(PIMCORE_OPENSEARCH_CLIENT_HOST)%']
#             ssl_verification: false

# Enable this if you're using S3 for assets storage
# flysystem:
#     storages:
#         pimcore.asset.storage:
#             # Storage for asset source files, directory structure is equal to the asset tree structure
#                 adapter: 'aws'
#                 visibility: public
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PUBLIC_BUCKET)%'
#                     prefix: assets
#         pimcore.asset_cache.storage:
#             # Storage for cached asset files, e.g. PDF and image files generated out of Office files or videos
#             # which are then used by the thumbnail engine as source files
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: asset_caches
#         pimcore.thumbnail.storage:
#             # Storage for image and video thumbnails, directory structure is equal to the source asset tree
#                 adapter: 'aws'
#                 visibility: public
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PUBLIC_BUCKET)%'
#                     prefix: thumbnails
#         pimcore.version.storage:
#             # Storage for serialized versioning data of documents/asset/data objects
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: versions
#         pimcore.admin.storage:
#             # Storage for serialized recycle bin data of documents/asset/data objects
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: recycle_bin
#         pimcore.application_log.storage:
#             # Storage for serialized recycle bin data of documents/asset/data objects
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: recycle_bin
#         pimcore.email_log.storage:
#             # Storage for serialized recycle bin data of documents/asset/data objects
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: recycle_bin
#         pimcore.recycle_bin.storage:
#             # Storage for serialized recycle bin data of documents/asset/data objects
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: recycle_bin
#         pimcore.temp.storage:
#             # Storage for serialized recycle bin data of documents/asset/data objects
#                 adapter: 'aws'
#                 visibility: private
#                 options:
#                     client: 'assets_s3'
#                     bucket: '%env(S3_PRIVATE_BUCKET)%'
#                     prefix: recycle_bin

